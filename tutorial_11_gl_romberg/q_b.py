import numpy as np
from matplotlib import pyplot as plt
def trans_f(f, a, b):
    #val = 0.5*(np.exp((-0.25)*((x+1)**2)))
    m = (b-a)/2
    c = (b+a)/2
    def f_mod(x):
        val = ((b-a)/2)*f(m*x+c)
        #print(val)
        return val
    return f_mod


#-------------------------------------
#Gauss weights and roots
x2 = [-0.577350269189626 ,0.577350269189626]
w2 = [1.000000000000000 , 1.000000000000000]

x3 = [-0.774596669241483 , 0 , 0.774596669241483]
w3 = [0.555555555555556 , 0.888888888888889 , 0.555555555555556]

x4 = [-0.861136311594053,-0.339981043584856,0.339981043584856 , 0.861136311594053]
w4 = [0.347854845137454 , 0.652145154862546 , 0.652145154862546 , 0.347854845137454 ]


x =np.array( [[-0.577350269189626 ,0.577350269189626] , [-0.774596669241483 , 0 , 0.774596669241483] ,[-0.861136311594053,-0.339981043584856,0.339981043584856 , 0.861136311594053] ] )
w = np.array([[1.000000000000000 , 1.000000000000000],[0.555555555555556 , 0.888888888888889 , 0.555555555555556] , [0.347854845137454 , 0.652145154862546 , 0.652145154862546 , 0.347854845137454 ]] )
#_______________________________________

def calc_gauss(f ,a,b , N):
    n = N-2
    val = [trans_f(f,a,b)(x_n) for x_n in x[n]]
    print(np.dot(val ,w[n]))
#    print(len(val))
#    print(len(w[n]))


##__________________________________________
# Our function defiitions
def f_a(x):
    val = np.exp(-1*x**2)
    return val

def f_b(k):
    def f(x):
        val=1/((1-k*(np.sin(x))**2)**0.5)
        return val
    return f

calc_gauss(f_a,0,2,2)
#calc_gauss(f_a,0,2,3)
calc_gauss(f_a,0,2,10)
#calc_gauss(f,0,2,2)
#calc_gauss(f_b(0.5) , 0 ,1,2)

